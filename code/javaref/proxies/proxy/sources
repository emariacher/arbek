Nicolas,

  Voila les sources. Pour l'instant je travaille... (impressionant?).
Il y a 1 ou 2 semaines j'ai travaille sur mon labyrinthe pour faire
des statistiques par strategie. J'ai aussi pas mal travaille sur
l'outil de network management dont on avait parle tous les 2, mais
j'ai arrete parce que j'ai reussi a faire une maquette honnete, et
continuer serait fastidieux.
  Je vais peut-etre changer de projet et faire de l'assembleur 8032
(annee 1979/1980) pour le Prizma avec l'espoir de faire migrer
tout ca vers du C sur 860.

Eric.


import java.awt.*;
import java.awt.event.*;
import com.sun.java.swing.*;
import com.sun.java.swing.text.*;

import java.net.URL;

public class ScrolledText extends JFrame {

    private Font demoFont = new Font("Serif", Font.PLAIN, 14);
    private boolean   DEBUG = true;
            JTextArea toWeb, toBrowser;
            JButton   sendToWeb, sendToBrowser;
            JCheckBox autoChkBoxToWeb, autoChkBoxToBrowser;
            boolean   autoToWeb           = true;
            boolean   autoToBrowser       = true;
    private JPanel    cmdPanel;

    public ScrolledText(String titre) {
        super(titre);

        // Get ContentPane & set its layout
        Container cp = getContentPane();
        cp.setLayout(new GridLayout(1,3));

        // Setup Text Areas
        toWeb     = new JTextArea();     toWeb.setEditable(true);     toWeb.setFont(demoFont);
        toBrowser = new JTextArea(); toBrowser.setEditable(true); toBrowser.setFont(demoFont);

        // Setup Command Panel, its buttons & its checkboxes
        cmdPanel  = new JPanel(new GridLayout(2,2));

        sendToWeb = new JButton("Send to Web",new ImageIcon("right.gif"));
        autoChkBoxToWeb = new JCheckBox("Auto Browser -> Web",true);
        autoChkBoxToWeb.addItemListener(new ItemAuto());
        // sendToWeb.setSelected(false);
        // sendToWeb.setMinimumSize(new Dimension(10,10)); sendToWeb.setMaximumSize(new Dimension(50,50));
        cmdPanel.add(sendToWeb);
        sendToWeb.setVisible(!autoToWeb);
        cmdPanel.add(autoChkBoxToWeb);

        sendToBrowser = new JButton("Send to Browser",new ImageIcon("left.gif"));
        autoChkBoxToBrowser = new JCheckBox("Auto Browser <- Web",true);
        autoChkBoxToBrowser.addItemListener(new ItemAuto());
        // sendToBrowser.setSelected(false);
        // sendToBrowser.setMinimumSize(new Dimension(10,10)); sendToBrowser.setMaximumSize(new Dimension(50,50));
        cmdPanel.add(sendToBrowser);
        sendToBrowser.setVisible(!autoToBrowser);
        cmdPanel.add(autoChkBoxToBrowser);

        // Place in ContentPane
        cp.add(new JScrollPane(toWeb),     BorderLayout.EAST);
        cp.add(cmdPanel,                   BorderLayout.CENTER);
        cp.add(new JScrollPane(toBrowser), BorderLayout.WEST);
    }

  class ItemAuto implements ItemListener {
    public void itemStateChanged(ItemEvent e) {
      JCheckBox chkbox = (JCheckBox)(e.getSource());
      if(chkbox==autoChkBoxToWeb) {
        autoToWeb     = (e.getStateChange() == ItemEvent.SELECTED);
        sendToWeb.setVisible(!autoToWeb);
      } else if(chkbox==autoChkBoxToBrowser) {
        autoToBrowser = (e.getStateChange() == ItemEvent.SELECTED);
        sendToBrowser.setVisible(!autoToBrowser);
      } else {
        System.out.println("[31m (7) [30m" + e + "[34m");
      }
    }
  }
}
import java.io.*;
import java.net.*;
import java.awt.*;
import java.awt.event.*;
import com.sun.java.swing.*;
import com.sun.java.swing.text.*;

class OneServeur extends Thread{
  private Socket              socket, socketToWeb;
  private BufferedReader      fromBrowser;
  private PrintWriter         toWeb, toBrowser;
  private BufferedReader      fromWeb;
          ScrolledText        panel;
          ActionSendToWeb     actionSendToWeb     = new ActionSendToWeb();
          ActionSendToBrowser actionSendToBrowser = new ActionSendToBrowser();

  public OneServeur(Socket s, ScrolledText panel) throws IOException {
        socket               = s;
        fromBrowser          = new BufferedReader( new InputStreamReader ( socket.getInputStream()));
        toBrowser            = new PrintWriter( new BufferedWriter ( new OutputStreamWriter ( socket.getOutputStream())),true);
        this.panel           = panel;
        panel.sendToWeb.addActionListener(actionSendToWeb);
        panel.sendToBrowser.addActionListener(actionSendToBrowser);
        start();
  }


  public void run() {
    try {
        String str, targetHost="", httpHeader="";
        //----------- BROWSER -> WEB
        while(true) {
             str = fromBrowser.readLine();
             httpHeader += str + "\n";
             if ( str.startsWith("Host: " ) ) targetHost = str.substring(6);
             if ( str.length() == 0 ) break;
        }
        socketToWeb = new Socket(InetAddress.getByName(targetHost),80);
        //socketToWeb = new Socket(InetAddress.getByName("proxy.austin.ibm.com"),80);
        //socketToWeb = new Socket(InetAddress.getByName("proxy.raleigh.ibm.com"),80);
        System.out.println(socketToWeb);
        fromWeb = new BufferedReader( new InputStreamReader ( socketToWeb.getInputStream()));
        toWeb = new PrintWriter( new BufferedWriter ( new OutputStreamWriter ( socketToWeb.getOutputStream())),true);
        Document docToWeb = panel.toWeb.getDocument();
        try {
          docToWeb.remove(0,docToWeb.getLength());
        } catch ( Exception e ) {
          System.err.println("[31m (1) " + e + "[34m");
        }
        panel.toWeb.append(httpHeader);

        if(panel.autoToWeb) actionSendToWeb.actionPerformed(null);

        //----------- WEB -> BROWSER
        boolean echoing = true;

        Document docToBrowser = panel.toBrowser.getDocument();
        try {
          docToBrowser.remove(0,docToBrowser.getLength());
        } catch ( Exception e ) {
          System.err.println("[31m (2) " + e + "[34m");
        }
        while ( true ) {
             str = fromWeb.readLine();
             if ( str == null ) break;
             if ( str.length() == 0 ) echoing = false;
             if( echoing ) {
                System.out.println(str);
                // panel.toBrowser.append("\n" + str);
             }
             // toBrowser.println(str);
             panel.toBrowser.append(str + "\n");
        }
/*      int lg;
        char tab[] = new char[520];
        while ( true ) {
             lg = fromWeb.read(tab,0,512);
             System.out.print("..." + lg);
             toBrowser.write(tab,0,lg);
             if ( lg != 512 ) break;
        }
*/
      if(panel.autoToBrowser) actionSendToBrowser.actionPerformed(null);
      System.out.println("\nclosing ...");
    } catch ( IOException e) {
      System.err.println("[31m (5) " + e + "[34m");
    } finally {
      // System.err.println("[31m (6) [34m");
    }
  }


  class ActionSendToWeb implements ActionListener {
    public void actionPerformed(ActionEvent e) {
      // System.out.println("[31m Send to Web [30m" + e + "[34m");
      Document docToWeb = panel.toWeb.getDocument();
      try {
        int length = docToWeb.getLength();
        if(length!=0) {
          toWeb.println(docToWeb.getText(0,docToWeb.getLength()));
          System.out.println("[30m" + docToWeb.getText(0,length) + "[34m");
          docToWeb.remove(0,length); /* or put a send status */
        } else {
          System.err.println("[31m Nothing sent to Web. [34m");
        }
      } catch ( Exception evt ) {
          System.err.println("[31m (3) " + evt + "[34m");
      }
    }
  }

  class ActionSendToBrowser implements ActionListener {
    public void actionPerformed(ActionEvent e) {
      // System.out.println("[31m Send to Browser [30m" + e + "[34m");
      Document docToBrowser = panel.toBrowser.getDocument();
      try {
        int length = docToBrowser.getLength();
        if(length!=0) {
          toBrowser.println(docToBrowser.getText(0,docToBrowser.getLength()));
          System.out.println(docToBrowser.getText(0,length));
          socket.close();
          docToBrowser.remove(0,length); /* or put a send status */
        } else {
          System.err.println("[31m Nothing sent to Browser. [34m");
        }
        // System.out.println("\nclosing ...");
      } catch ( Exception evt ) {
          System.err.println("[31m (4) " + evt + "[34m");
      }
    }
  }

}

public class Proxy {

  public static final int PORT = 12345;

  public static void main(String args[]) throws IOException {
        ScrolledText   panel;
        ServerSocket s = new ServerSocket(PORT);
        System.out.println("Started " + s);

        panel = new ScrolledText("Browser<->Web");
        panel.addWindowListener(new WindowAdapter() { public void windowClosing(WindowEvent e) { System.out.println("[30m bye-bye! [34m"); System.exit(0); } });
        panel.pack();
        panel.show();



        try {
                while ( true ) {
                        Socket socket = s.accept();
                        try {
                                System.out.println("connection acceptee " + socket);
                                new OneServeur(socket, panel);
                        } catch ( IOException e ) {
                                socket.close();
                        }
                }
        } finally {
                s.close();
        }
  }
}








