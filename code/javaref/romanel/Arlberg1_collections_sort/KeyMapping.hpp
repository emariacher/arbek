struct KeyId
{
    TCHAR *name;
    unsigned char vkey;    // VK_ codes
    unsigned char dik;     // DIK_ codes (directinput, scancode)
    WORD          hid;     // HID usage codes
    bool     extended;     // the key is an extended key
};

struct IncorrectKey
{
    unsigned char vkey;    // VK_ codes
    unsigned char dik;     // DIK_ codes (directinput, scancode)
};



KeyId KeyMapping::m_keyboardKeys[] =
{
    {TEXT("unknown"  	      ), 0x00, 0x00, 0x00 },
    {TEXT("paste"           ), 0x00, 0x00, 0x7D }, 
    {TEXT("find"            ), 0x00, 0x00, 0x7E }, 
    {TEXT("misc1"           ), 0x00, 0x00, 0x32 },  // Non-US # and ~
    {TEXT("misc2"           ), 0x00, 0x00, 0x64 },  // keypad Non-US \ and |
    {TEXT("miscMenu"        ), 0x00, 0x00, 0x76 }, 
    {TEXT("again"           ), 0x00, 0x00, 0x79 },
    {TEXT("copy"            ), 0x00, 0x00, 0x7C }, 
    {TEXT("cut"             ), 0x00, 0x00, 0x7B }, 
    {TEXT("numpadEquals"    ), 0x00, 0x8D, 0x67 },  // nec
    {TEXT("undo"            ), 0x00, 0x93, 0x7A },
    {TEXT("numpadEnter"     ), 0x00, 0x9C, 0x58 },  
    {TEXT("numpadComma"     ), 0x00, 0xB3, 0x85 },  
    {TEXT("backspace"  	    ), 0x08, 0x0E, 0x2A }, // backspace
    {TEXT("tab"       	    ), 0x09, 0x0F, 0x2B },
    {TEXT("clear"    	      ), 0x0C, 0x00, 0x00 }, 
    {TEXT("enter"    	      ), 0x0D, 0x1C, 0x28 }, // main return
    {TEXT("lShift"          ), 0x10, 0x2A, 0xE1 },
    {TEXT("lControl"        ), 0x11, 0x1D, 0xE0 },
    {TEXT("lAlt"            ), 0x12, 0x38, 0xE2 },
    {TEXT("pause"     	    ), 0x13, 0xC5, 0x48 },
    {TEXT("capsLock"   	    ), 0x14, 0x3A, 0x39 }, // caps lock
    {TEXT("escape"    	    ), 0x1B, 0x01, 0x29 },
    {TEXT("space"     	    ), 0x20, 0x39, 0x2C },
    {TEXT("pageUp"     	    ), 0x21, 0xC9, 0x4B }, // prior
    {TEXT("pageDown"        ), 0x22, 0xD1, 0x4E },  // next
    {TEXT("end"       	    ), 0x23, 0xCF, 0x4D },
    {TEXT("home"      	    ), 0x24, 0xC7, 0x4A },
    {TEXT("left"      	    ), 0x25, 0xCB, 0x50 },
    {TEXT("up"        	    ), 0x26, 0xC8, 0x52 },
    {TEXT("right"     	    ), 0x27, 0xCD, 0x4F },
    {TEXT("down"      	    ), 0x28, 0xD0, 0x51 },
    {TEXT("select"    	    ), 0x29, 0x00, 0x77 },
    {TEXT("print"           ), 0x2A, 0xB7, 0x46 }, // print / sysreq
    {TEXT("execute"   	    ), 0x2B, 0x00, 0x74 },
    {TEXT("printScreen"     ), 0x2C, 0x00, 0x00 }, // printscreen
    {TEXT("insert"    	    ), 0x2D, 0xD2, 0x49 },
    {TEXT("delete"    	    ), 0x2E, 0xD3, 0x4C },
    {TEXT("help"      	    ), 0x2F, 0x00, 0x75 },
    {TEXT("0"         	    ), 0x30, 0x0B, 0x27 },
    {TEXT("1"         	    ), 0x31, 0x02, 0x1E },
    {TEXT("2"         	    ), 0x32, 0x03, 0x1F },
    {TEXT("3"         	    ), 0x33, 0x04, 0x20 },
    {TEXT("4"         	    ), 0x34, 0x05, 0x21 },
    {TEXT("5"         	    ), 0x35, 0x06, 0x22 },
    {TEXT("6"         	    ), 0x36, 0x07, 0x23 },
    {TEXT("7"         	    ), 0x37, 0x08, 0x24 },
    {TEXT("8"         	    ), 0x38, 0x09, 0x25 },
    {TEXT("9"         	    ), 0x39, 0x0A, 0x26 },
    {TEXT("a"         	    ), 0x41, 0x1E, 0x04 },
    {TEXT("b"         	    ), 0x42, 0x30, 0x05 },
    {TEXT("c"         	    ), 0x43, 0x2E, 0x06 },
    {TEXT("d"         	    ), 0x44, 0x20, 0x07 },
    {TEXT("e"         	    ), 0x45, 0x12, 0x08 },
    {TEXT("f"         	    ), 0x46, 0x21, 0x09 },
    {TEXT("g"         	    ), 0x47, 0x22, 0x0A },
    {TEXT("h"         	    ), 0x48, 0x23, 0x0B },
    {TEXT("i"         	    ), 0x49, 0x17, 0x0C },
    {TEXT("j"         	    ), 0x4A, 0x24, 0x0D },
    {TEXT("k"         	    ), 0x4B, 0x25, 0x0E },
    {TEXT("l"         	    ), 0x4C, 0x26, 0x0F },
    {TEXT("m"         	    ), 0x4D, 0x32, 0x10 },
    {TEXT("n"         	    ), 0x4E, 0x31, 0x11 },
    {TEXT("o"         	    ), 0x4F, 0x18, 0x12 },
    {TEXT("p"         	    ), 0x50, 0x19, 0x13 },
    {TEXT("q"         	    ), 0x51, 0x10, 0x14 },
    {TEXT("r"         	    ), 0x52, 0x13, 0x15 },
    {TEXT("s"         	    ), 0x53, 0x1F, 0x16 },
    {TEXT("t"         	    ), 0x54, 0x14, 0x17 },
    {TEXT("u"         	    ), 0x55, 0x16, 0x18 },
    {TEXT("v"         	    ), 0x56, 0x2F, 0x19 },
    {TEXT("w"         	    ), 0x57, 0x11, 0x1A },
    {TEXT("x"         	    ), 0x58, 0x2D, 0x1B },
    {TEXT("y"         	    ), 0x59, 0x15, 0x1C },
    {TEXT("z"         	    ), 0x5A, 0x2C, 0x1D },
    {TEXT("lWin"      	    ), 0x5B, 0xDB, 0xE3 },
    {TEXT("rWin"  	        ), 0x5C, 0xDC, 0xE7 },
    {TEXT("apps"      	    ), 0x5D, 0xDD, 0x65 }, // compose
    {TEXT("power"     	    ), 0x5E, 0xDE, 0x66 },
    {TEXT("sleep"     	    ), 0x5F, 0x00, 0x00 },
    {TEXT("numpad0"   	    ), 0x60, 0x52, 0x62 },
    {TEXT("numpad1"   	    ), 0x61, 0x4F, 0x59 },
    {TEXT("numpad2"   	    ), 0x62, 0x50, 0x5A },
    {TEXT("numpad3"   	    ), 0x63, 0x51, 0x5B },
    {TEXT("numpad4"   	    ), 0x64, 0x4B, 0x5C },
    {TEXT("numpad5"   	    ), 0x65, 0x4C, 0x5D },
    {TEXT("numpad6"   	    ), 0x66, 0x4D, 0x5E },
    {TEXT("numpad7"   	    ), 0x67, 0x47, 0x5F },
    {TEXT("numpad8"   	    ), 0x68, 0x48, 0x60 },
    {TEXT("numpad9"   	    ), 0x69, 0x49, 0x61 },
    {TEXT("numpadMultiply"  ), 0x6A, 0x37, 0x55 }, // keypad *
    {TEXT("numpadAdd"       ), 0x6B, 0x4E, 0x57 }, // keypad +
    {TEXT("separator"       ), 0x6C, 0x00, 0x00 }, 
    {TEXT("numpadSubtract"  ), 0x6D, 0x4A, 0x56 }, // keypad - 
    {TEXT("numpadDecimal"   ), 0x6E, 0x53, 0x63 }, // keypad .
    {TEXT("numpadDivide"    ), 0x6F, 0xB5, 0x54 }, // keypad /
    {TEXT("f1"        	    ), 0x70, 0x3B, 0x3A },
    {TEXT("f2"        	    ), 0x71, 0x3C, 0x3B },
    {TEXT("f3"        	    ), 0x72, 0x3D, 0x3C },
    {TEXT("f4"        	    ), 0x73, 0x3E, 0x3D },
    {TEXT("f5"        	    ), 0x74, 0x3F, 0x3E },
    {TEXT("f6"        	    ), 0x75, 0x40, 0x3F },
    {TEXT("f7"        	    ), 0x76, 0x41, 0x40 },
    {TEXT("f8"        	    ), 0x77, 0x42, 0x41 },
    {TEXT("f9"        	    ), 0x78, 0x43, 0x42 },
    {TEXT("f10"       	    ), 0x79, 0x44, 0x43 },
    {TEXT("f11"       	    ), 0x7A, 0x57, 0x44 },
    {TEXT("f12"       	    ), 0x7B, 0x58, 0x45 },
    {TEXT("f13"       	    ), 0x7C, 0x64, 0x68 },
    {TEXT("f14"       	    ), 0x7D, 0x65, 0x69 },
    {TEXT("f15"       	    ), 0x7E, 0x66, 0x6A },
    {TEXT("f16"       	    ), 0x7F, 0x00, 0x6B },
    {TEXT("f17"       	    ), 0x80, 0x00, 0x6C },
    {TEXT("f18"       	    ), 0x81, 0x00, 0x6D },
    {TEXT("f19"       	    ), 0x82, 0x00, 0x6E },
    {TEXT("f20"       	    ), 0x83, 0x00, 0x6F },
    {TEXT("f21"       	    ), 0x84, 0x00, 0x70 },
    {TEXT("f22"       	    ), 0x85, 0x00, 0x71 },
    {TEXT("f23"       	    ), 0x86, 0x00, 0x72 },
    {TEXT("f24"       	    ), 0x87, 0x00, 0x73 },
    {TEXT("numLock"   	    ), 0x90, 0x45, 0x53 },
    {TEXT("scrollLock" 	    ), 0x91, 0x46, 0x47 },  // scroll lock
    {TEXT("lShift"          ), 0xA0, 0x2A, 0xE1 },
    {TEXT("rShift"    	    ), 0xA1, 0x36, 0xE5 },
    {TEXT("lControl"        ), 0xA2, 0x1D, 0xE0 },
    {TEXT("rControl"  	    ), 0xA3, 0x9D, 0xE4 },
    {TEXT("lAlt"            ), 0xA4, 0x38, 0xE2 },
    {TEXT("rAlt"        	  ), 0xA5, 0xB8, 0xE6 },
    {TEXT("browserBack"     ), 0xA6, 0x00, 0x00 },
    {TEXT("browserForward"  ), 0xA7, 0x00, 0x00 },
    {TEXT("browserRefresh"  ), 0xA8, 0x00, 0x00 },
    {TEXT("browserStop"     ), 0xA9, 0x00, 0x00 },
    {TEXT("browserSearch"   ), 0xAA, 0x00, 0x00 }, 
    {TEXT("browserFavorites"), 0xAB, 0x00, 0x00 }, 
    {TEXT("browserHome"     ), 0xAC, 0x00, 0x00 }, 
    {TEXT("mute"  	        ), 0xAD, 0xA0, 0x7F }, 
    {TEXT("volumeDown"      ), 0xAE, 0xAE, 0x81 },
    {TEXT("volumeUp"        ), 0xAF, 0xB0, 0x80 },
    {TEXT("nextTrack"       ), 0xB0, 0x00, 0xB5 }, 
    {TEXT("prevTrack"       ), 0xB1, 0x00, 0xB6 }, 
    {TEXT("stopMedia"  	    ), 0xB2, 0x95, 0x78 },
    {TEXT("playMedia"	      ), 0xB3, 0x00, 0xB0 },
    {TEXT("mail"      	    ), 0xB4, 0x00, 0xFF },
    {TEXT("media"      	    ), 0xB5, 0x00, 0x87 },
    {TEXT("launch1"    	    ), 0xB6, 0x00, 0x00 },
    {TEXT("launch2"    	    ), 0xB7, 0x00, 0x00 },
    //{TEXT("semicolon"  	    ), 0xBA, 0x27, 0x33 }, //this key is removed from here since it depends on the layout
    {TEXT("equals"     	    ), 0xBB, 0x0D, 0x2E },
    {TEXT("comma"     	    ), 0xBC, 0x33, 0x36 },
    {TEXT("minus"  	        ), 0xBD, 0x0C, 0x2D },
    {TEXT("period"     	    ), 0xBE, 0x34, 0x37 }, 
    //{TEXT("slash"     	    ), 0xBF, 0x35, 0x38 }, //this key is removed from here since it depends on the layout
    //{TEXT("grave"     	    ), 0xC0, 0x29, 0x35 }, //this key is removed from here since it depends on the layout
    //{TEXT("lbracket"   	    ), 0xDB, 0x1A, 0x2F }, //this key is removed from here since it depends on the layout
    //{TEXT("backslash"  	    ), 0xDC, 0x2B, 0x31 }, //this key is removed from here since it depends on the layout
    //{TEXT("rbracket"   	    ), 0xDD, 0x1B, 0x30 }, //this key is removed from here since it depends on the layout
    //{TEXT("apostrophe"      ), 0xDE, 0x28, 0x34 }, //this key is removed from here since it depends on the layout
    {TEXT("letter"   	      ), 0xFF, 0x00, 0xFFFF },
};

KeyId KeyMapping::m_specialKeys[] =
{
    {TEXT("rShift"           ), 0x10, 0x36, 0x00, false},
    {TEXT("rControl"         ), 0x11, 0x00, 0x00, true },
    {TEXT("rAlt"             ), 0x12, 0x00, 0x00, true },
    {TEXT("numpadEnter"      ), 0x0D, 0x00, 0x00, true },
    {TEXT("numpadPageUp"     ), 0x21, 0x00, 0x00, false},
    {TEXT("numpadPageDown"   ), 0x22, 0x00, 0x00, false},
    {TEXT("numpadEnd"        ), 0x23, 0x00, 0x00, false},
    {TEXT("numpadHome"       ), 0x24, 0x00, 0x00, false},
    {TEXT("numpadLeft"       ), 0x25, 0x00, 0x00, false},
    {TEXT("numpadUp"         ), 0x26, 0x00, 0x00, false},
    {TEXT("numpadRight"      ), 0x27, 0x00, 0x00, false},
    {TEXT("numpadDown"       ), 0x28, 0x00, 0x00, false},
    {TEXT("numpadInsert"     ), 0x2D, 0x00, 0x00, false},
    {TEXT("numpadDelete"     ), 0x2E, 0x00, 0x00, false},

};

IncorrectKey KeyMapping::m_incorrectKeys[] =
{
  {0x13, 0x1D}, //should be pause
  {0x5F, 0x5F}, //should be Sleep
  {0x90, 0x45}, //should be NumLock
  {0xA6, 0x6A}, //should be Back
  {0xA7, 0x69}, //should be Forward
  {0xAA, 0x65}, //should be Search
  {0xAB, 0x66}, //should be Favorites
  {0xAC, 0x32}, //should be Home
  {0xAD, 0x20}, //should be Mute
  {0xAE, 0x2E}, //should be Volume down
  {0xAF, 0x30}, //should be Volume up
  {0xB0, 0x19}, //should be Next
  {0xB1, 0x10}, //should be Prev
  {0xB2, 0x24}, //should be Stop
  {0xB3, 0x22}, //should be Play
  {0xB4, 0x6C}, //should be Mail
  {0xB5, 0x6D}, //should be Media
};

KeyId KeyMapping::m_consumerKeys[] =
{
  { TEXT("help"             ), 0x00, 0x00,  0x0095},//new
	{ TEXT("nextTrack"        ), 0x00, 0x00,  0x00B5},
	{ TEXT("prevTrack"        ), 0x00, 0x00,  0x00B6},
	{ TEXT("stop"             ), 0x00, 0x00,  0x00B7},
	{ TEXT("playPause"        ), 0x00, 0x00,  0x00CD},
	{ TEXT("mute"             ), 0x00, 0x00,  0x00E2},
	{ TEXT("volumeUp"         ), 0x00, 0x00,  0x00E9},
	{ TEXT("volumeDown"       ), 0x00, 0x00,  0x00EA},
	{ TEXT("media"            ), 0x00, 0x00,  0x0183},//AL Configuration
	{ TEXT("word"             ), 0x00, 0x00,  0x0184},
	{ TEXT("excel"            ), 0x00, 0x00,  0x0186},
	{ TEXT("powerPoint"       ), 0x00, 0x00,  0x0188},
	{ TEXT("mail"             ), 0x00, 0x00,  0x018A},
	{ TEXT("calendar"         ), 0x00, 0x00,  0x018E},
	{ TEXT("calculator"       ), 0x00, 0x00,  0x0192},
	{ TEXT("myComputer"       ), 0x00, 0x00,  0x0194},
	{ TEXT("selectTaskApp"    ), 0x00, 0x00,  0x01A2},
	{ TEXT("messenger"        ), 0x00, 0x00,  0x01BC},
	{ TEXT("save"             ), 0x00, 0x00,  0x0207},
	{ TEXT("print"            ), 0x00, 0x00,  0x0208},
	{ TEXT("undo"             ), 0x00, 0x00,  0x021A},
	{ TEXT("Search"           ), 0x00, 0x00,  0x0221},
	{ TEXT("browserHome"      ), 0x00, 0x00,  0x0223},
	{ TEXT("browserBack"      ), 0x00, 0x00,  0x0224},
	{ TEXT("browserForward"   ), 0x00, 0x00,  0x0225},
	{ TEXT("browserStop"      ), 0x00, 0x00,  0x0226},
	{ TEXT("browserRefresh"   ), 0x00, 0x00,  0x0227},
	{ TEXT("browserFavorites" ), 0x00, 0x00,  0x022A},
	{ TEXT("zoomIn"           ), 0x00, 0x00,  0x022D},
	{ TEXT("zoomOut"          ), 0x00, 0x00,  0x022E},
	{ TEXT("zoom"             ), 0x00, 0x00,  0x022F},
	{ TEXT("redo"             ), 0x00, 0x00,  0x0279},
};
